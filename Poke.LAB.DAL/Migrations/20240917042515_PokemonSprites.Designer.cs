// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Poke.LAB.DAL;

#nullable disable

namespace Poke.LAB.DAL.Migrations
{
    [DbContext(typeof(PokemonContext))]
    [Migration("20240917042515_PokemonSprites")]
    partial class PokemonSprites
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Poke.LAB.DAL.Models.Nature", b =>
                {
                    b.Property<long>("NatureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("NatureID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PokeAPI_ID")
                        .HasColumnType("bigint");

                    b.HasKey("NatureID");

                    b.HasIndex("PokeAPI_ID");

                    b.ToTable("Nature");
                });

            modelBuilder.Entity("Poke.LAB.DAL.Models.Pokemon", b =>
                {
                    b.Property<long>("PokemonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("PokemonID"));

                    b.Property<long>("BaseExperience")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("Height")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.Property<long>("PokeAPI_ID")
                        .HasColumnType("bigint");

                    b.Property<long>("Weight")
                        .HasColumnType("bigint");

                    b.HasKey("PokemonID");

                    b.HasIndex("PokeAPI_ID");

                    b.ToTable("Pokemon");
                });

            modelBuilder.Entity("Poke.LAB.DAL.Models.PokemonSprites", b =>
                {
                    b.Property<long>("PokeSpriteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("PokeSpriteID"));

                    b.Property<string>("Back")
                        .HasColumnType("longtext");

                    b.Property<string>("Front")
                        .HasColumnType("longtext");

                    b.Property<long>("PokemonID")
                        .HasColumnType("bigint");

                    b.HasKey("PokeSpriteID");

                    b.HasIndex("PokemonID")
                        .IsUnique();

                    b.ToTable("PokemonSprites");
                });

            modelBuilder.Entity("Poke.LAB.DAL.Models.PokemonSprites", b =>
                {
                    b.HasOne("Poke.LAB.DAL.Models.Pokemon", "Pokemon")
                        .WithOne("Sprites")
                        .HasForeignKey("Poke.LAB.DAL.Models.PokemonSprites", "PokemonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pokemon");
                });

            modelBuilder.Entity("Poke.LAB.DAL.Models.Pokemon", b =>
                {
                    b.Navigation("Sprites");
                });
#pragma warning restore 612, 618
        }
    }
}
